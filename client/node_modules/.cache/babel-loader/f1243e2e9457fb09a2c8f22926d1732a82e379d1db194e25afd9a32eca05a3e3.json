{"ast":null,"code":"class WebSocketService {\n  constructor() {\n    this.socket = null;\n    this.listeners = {\n      message: [],\n      open: [],\n      close: [],\n      error: []\n    };\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 5;\n    this.reconnectTimeout = null;\n  }\n  connect(token) {\n    if (this.socket && this.socket.readyState === WebSocket.OPEN) {\n      console.log('WebSocket already connected');\n      return;\n    }\n    const wsProtocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n    const wsUrl = `${wsProtocol}//${window.location.hostname}:5000/ws?token=${token}`;\n    this.socket = new WebSocket(wsUrl);\n    this.socket.onopen = () => {\n      console.log('WebSocket connected');\n      this.reconnectAttempts = 0;\n      this.notifyListeners('open');\n    };\n    this.socket.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        this.notifyListeners('message', data);\n      } catch (error) {\n        console.error('Error parsing WebSocket message:', error);\n      }\n    };\n    this.socket.onclose = event => {\n      console.log('WebSocket disconnected:', event.code, event.reason);\n      this.notifyListeners('close', event);\n\n      // Attempt to reconnect if not a normal closure\n      if (event.code !== 1000 && event.code !== 1001) {\n        this.attemptReconnect();\n      }\n    };\n    this.socket.onerror = error => {\n      console.error('WebSocket error:', error);\n      this.notifyListeners('error', error);\n    };\n  }\n  attemptReconnect() {\n    if (this.reconnectAttempts >= this.maxReconnectAttempts) {\n      console.log('Max reconnect attempts reached');\n      return;\n    }\n    this.reconnectAttempts++;\n    const delay = Math.min(1000 * Math.pow(2, this.reconnectAttempts), 30000);\n    console.log(`Attempting to reconnect in ${delay}ms (attempt ${this.reconnectAttempts})`);\n    clearTimeout(this.reconnectTimeout);\n    this.reconnectTimeout = setTimeout(() => {\n      const token = localStorage.getItem('userToken');\n      if (token) {\n        this.connect(token);\n      }\n    }, delay);\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.close();\n      this.socket = null;\n    }\n    clearTimeout(this.reconnectTimeout);\n  }\n  sendMessage(data) {\n    if (this.socket && this.socket.readyState === WebSocket.OPEN) {\n      this.socket.send(JSON.stringify(data));\n    } else {\n      console.error('WebSocket not connected, cannot send message');\n    }\n  }\n  addListener(event, callback) {\n    if (this.listeners[event]) {\n      this.listeners[event].push(callback);\n    }\n  }\n  removeListener(event, callback) {\n    if (this.listeners[event]) {\n      this.listeners[event] = this.listeners[event].filter(cb => cb !== callback);\n    }\n  }\n  notifyListeners(event, data) {\n    if (this.listeners[event]) {\n      this.listeners[event].forEach(callback => callback(data));\n    }\n  }\n}\nconst webSocketService = new WebSocketService();\nexport default webSocketService;","map":{"version":3,"names":["WebSocketService","constructor","socket","listeners","message","open","close","error","reconnectAttempts","maxReconnectAttempts","reconnectTimeout","connect","token","readyState","WebSocket","OPEN","console","log","wsProtocol","window","location","protocol","wsUrl","hostname","onopen","notifyListeners","onmessage","event","data","JSON","parse","onclose","code","reason","attemptReconnect","onerror","delay","Math","min","pow","clearTimeout","setTimeout","localStorage","getItem","disconnect","sendMessage","send","stringify","addListener","callback","push","removeListener","filter","cb","forEach","webSocketService"],"sources":["C:/Programming/Clubs/CIS/HackPrix/drift-guard-1pm/client/src/utils/websocket.js"],"sourcesContent":["class WebSocketService {\r\n  constructor() {\r\n    this.socket = null;\r\n    this.listeners = {\r\n      message: [],\r\n      open: [],\r\n      close: [],\r\n      error: []\r\n    };\r\n    this.reconnectAttempts = 0;\r\n    this.maxReconnectAttempts = 5;\r\n    this.reconnectTimeout = null;\r\n  }\r\n\r\n  connect(token) {\r\n    if (this.socket && this.socket.readyState === WebSocket.OPEN) {\r\n      console.log('WebSocket already connected');\r\n      return;\r\n    }\r\n\r\n    const wsProtocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\r\n    const wsUrl = `${wsProtocol}//${window.location.hostname}:5000/ws?token=${token}`;\r\n    \r\n    this.socket = new WebSocket(wsUrl);\r\n\r\n    this.socket.onopen = () => {\r\n      console.log('WebSocket connected');\r\n      this.reconnectAttempts = 0;\r\n      this.notifyListeners('open');\r\n    };\r\n\r\n    this.socket.onmessage = (event) => {\r\n      try {\r\n        const data = JSON.parse(event.data);\r\n        this.notifyListeners('message', data);\r\n      } catch (error) {\r\n        console.error('Error parsing WebSocket message:', error);\r\n      }\r\n    };\r\n\r\n    this.socket.onclose = (event) => {\r\n      console.log('WebSocket disconnected:', event.code, event.reason);\r\n      this.notifyListeners('close', event);\r\n      \r\n      // Attempt to reconnect if not a normal closure\r\n      if (event.code !== 1000 && event.code !== 1001) {\r\n        this.attemptReconnect();\r\n      }\r\n    };\r\n\r\n    this.socket.onerror = (error) => {\r\n      console.error('WebSocket error:', error);\r\n      this.notifyListeners('error', error);\r\n    };\r\n  }\r\n\r\n  attemptReconnect() {\r\n    if (this.reconnectAttempts >= this.maxReconnectAttempts) {\r\n      console.log('Max reconnect attempts reached');\r\n      return;\r\n    }\r\n\r\n    this.reconnectAttempts++;\r\n    const delay = Math.min(1000 * Math.pow(2, this.reconnectAttempts), 30000);\r\n    \r\n    console.log(`Attempting to reconnect in ${delay}ms (attempt ${this.reconnectAttempts})`);\r\n    \r\n    clearTimeout(this.reconnectTimeout);\r\n    this.reconnectTimeout = setTimeout(() => {\r\n      const token = localStorage.getItem('userToken');\r\n      if (token) {\r\n        this.connect(token);\r\n      }\r\n    }, delay);\r\n  }\r\n\r\n  disconnect() {\r\n    if (this.socket) {\r\n      this.socket.close();\r\n      this.socket = null;\r\n    }\r\n    \r\n    clearTimeout(this.reconnectTimeout);\r\n  }\r\n\r\n  sendMessage(data) {\r\n    if (this.socket && this.socket.readyState === WebSocket.OPEN) {\r\n      this.socket.send(JSON.stringify(data));\r\n    } else {\r\n      console.error('WebSocket not connected, cannot send message');\r\n    }\r\n  }\r\n\r\n  addListener(event, callback) {\r\n    if (this.listeners[event]) {\r\n      this.listeners[event].push(callback);\r\n    }\r\n  }\r\n\r\n  removeListener(event, callback) {\r\n    if (this.listeners[event]) {\r\n      this.listeners[event] = this.listeners[event].filter(cb => cb !== callback);\r\n    }\r\n  }\r\n\r\n  notifyListeners(event, data) {\r\n    if (this.listeners[event]) {\r\n      this.listeners[event].forEach(callback => callback(data));\r\n    }\r\n  }\r\n}\r\n\r\nconst webSocketService = new WebSocketService();\r\nexport default webSocketService;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}