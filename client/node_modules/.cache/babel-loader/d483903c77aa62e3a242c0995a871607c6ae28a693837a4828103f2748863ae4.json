{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\Clubs\\\\CIS\\\\HackPrix\\\\drift-guard-1pm\\\\client\\\\src\\\\components\\\\Map\\\\LocationMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './LocationMap.css';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { useLocation } from '../../contexts/LocationContext';\n\n// Fix Leaflet icon issues\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst LocationMap = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const {\n    myLocation,\n    connectedUsers\n  } = useLocation();\n  const [allLocations, setAllLocations] = useState([]);\n  const [mapError, setMapError] = useState(null);\n  const mapRef = useRef(null);\n  const leafletMapRef = useRef(null);\n  const markersRef = useRef({});\n  const [debugInfo, setDebugInfo] = useState({\n    myLocation: null,\n    connectedUsers: {}\n  });\n\n  // Debug info\n  useEffect(() => {\n    setDebugInfo({\n      myLocation: myLocation,\n      connectedUsers: connectedUsers\n    });\n  }, [myLocation, connectedUsers]);\n\n  // Initialize map\n  useEffect(() => {\n    if (!mapRef.current) return;\n    try {\n      // Create map if it doesn't exist\n      if (!leafletMapRef.current) {\n        console.log(\"Initializing map...\");\n        leafletMapRef.current = L.map(mapRef.current).setView([51.505, -0.09], 13);\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n          attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(leafletMapRef.current);\n        console.log(\"Map initialized successfully\");\n      }\n    } catch (error) {\n      console.error(\"Error initializing map:\", error);\n      setMapError(\"Failed to initialize map: \" + error.message);\n    }\n\n    // Cleanup function\n    return () => {\n      if (leafletMapRef.current) {\n        leafletMapRef.current.remove();\n        leafletMapRef.current = null;\n      }\n    };\n  }, []);\n\n  // Update locations\n  useEffect(() => {\n    console.log(\"Location update - My location:\", myLocation);\n    console.log(\"Location update - Connected users:\", connectedUsers);\n    const locations = [];\n\n    // Add my location if available\n    if (myLocation && myLocation.latitude && myLocation.longitude) {\n      console.log(\"Adding my location to map:\", myLocation);\n      locations.push({\n        id: 'me',\n        name: 'My Location',\n        role: (user === null || user === void 0 ? void 0 : user.role) || 'unknown',\n        lat: myLocation.latitude,\n        lng: myLocation.longitude,\n        isMe: true\n      });\n    }\n\n    // Add connected users' locations\n    Object.values(connectedUsers).forEach(connectedUser => {\n      if (connectedUser.coordinates && connectedUser.coordinates.latitude && connectedUser.coordinates.longitude) {\n        console.log(\"Adding connected user to map:\", connectedUser);\n        locations.push({\n          id: connectedUser.userId,\n          name: connectedUser.userName,\n          role: connectedUser.role,\n          lat: connectedUser.coordinates.latitude,\n          lng: connectedUser.coordinates.longitude,\n          isMe: false\n        });\n      }\n    });\n    console.log(\"All locations for map:\", locations);\n    setAllLocations(locations);\n  }, [myLocation, connectedUsers, user]);\n\n  // Update markers when locations change\n  useEffect(() => {\n    if (!leafletMapRef.current) {\n      console.log(\"Map not initialized yet, can't add markers\");\n      return;\n    }\n    if (allLocations.length === 0) {\n      console.log(\"No locations to display on map\");\n      return;\n    }\n    console.log(\"Updating map markers with locations:\", allLocations);\n    try {\n      // Clear existing markers\n      Object.values(markersRef.current).forEach(marker => {\n        leafletMapRef.current.removeLayer(marker);\n      });\n      markersRef.current = {};\n\n      // Add new markers\n      allLocations.forEach(location => {\n        console.log(\"Adding marker for:\", location);\n        const marker = L.marker([location.lat, location.lng]).addTo(leafletMapRef.current).bindPopup(`\n            <strong>${location.name}</strong><br>\n            Role: ${location.role}<br>\n            ${!location.isMe ? `Last updated: ${new Date().toLocaleTimeString()}` : ''}\n          `);\n        markersRef.current[location.id] = marker;\n      });\n\n      // Fit map to show all markers\n      if (allLocations.length === 1) {\n        leafletMapRef.current.setView([allLocations[0].lat, allLocations[0].lng], 15);\n      } else {\n        const bounds = L.latLngBounds(allLocations.map(loc => [loc.lat, loc.lng]));\n        leafletMapRef.current.fitBounds(bounds, {\n          padding: [50, 50]\n        });\n      }\n    } catch (error) {\n      console.error(\"Error updating map markers:\", error);\n      setMapError(\"Failed to update map markers: \" + error.message);\n    }\n  }, [allLocations]);\n\n  // If there's an error, show it\n  if (mapError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-map-container error\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", mapError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Reload Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If no locations, show loading\n  if (!myLocation && Object.keys(connectedUsers).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-map-container loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Waiting for location data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debug-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Debug Info:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"My Location: \", JSON.stringify(debugInfo.myLocation)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Connected Users: \", Object.keys(debugInfo.connectedUsers).length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"location-map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        height: '100%',\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), allLocations.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No locations to display on map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(LocationMap, \"UUbgz/zsSn1HBhsuFwNE+Awq1/0=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = LocationMap;\nexport default LocationMap;\nvar _c;\n$RefreshReg$(_c, \"LocationMap\");","map":{"version":3,"names":["React","useState","useEffect","useRef","L","useAuth","useLocation","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","LocationMap","_s","user","myLocation","connectedUsers","allLocations","setAllLocations","mapError","setMapError","mapRef","leafletMapRef","markersRef","debugInfo","setDebugInfo","current","console","log","map","setView","tileLayer","attribution","addTo","error","message","remove","locations","latitude","longitude","push","id","name","role","lat","lng","isMe","Object","values","forEach","connectedUser","coordinates","userId","userName","length","marker","removeLayer","location","bindPopup","Date","toLocaleTimeString","bounds","latLngBounds","loc","fitBounds","padding","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","reload","keys","JSON","stringify","ref","style","height","width","_c","$RefreshReg$"],"sources":["C:/Programming/Clubs/CIS/HackPrix/drift-guard-1pm/client/src/components/Map/LocationMap.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './LocationMap.css';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { useLocation } from '../../contexts/LocationContext';\r\n\r\n// Fix Leaflet icon issues\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\nconst LocationMap = () => {\r\n  const { user } = useAuth();\r\n  const { myLocation, connectedUsers } = useLocation();\r\n  const [allLocations, setAllLocations] = useState([]);\r\n  const [mapError, setMapError] = useState(null);\r\n  const mapRef = useRef(null);\r\n  const leafletMapRef = useRef(null);\r\n  const markersRef = useRef({});\r\n  const [debugInfo, setDebugInfo] = useState({\r\n    myLocation: null,\r\n    connectedUsers: {}\r\n  });\r\n\r\n  // Debug info\r\n  useEffect(() => {\r\n    setDebugInfo({\r\n      myLocation: myLocation,\r\n      connectedUsers: connectedUsers\r\n    });\r\n  }, [myLocation, connectedUsers]);\r\n\r\n  // Initialize map\r\n  useEffect(() => {\r\n    if (!mapRef.current) return;\r\n    \r\n    try {\r\n      // Create map if it doesn't exist\r\n      if (!leafletMapRef.current) {\r\n        console.log(\"Initializing map...\");\r\n        leafletMapRef.current = L.map(mapRef.current).setView([51.505, -0.09], 13);\r\n        \r\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n          attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        }).addTo(leafletMapRef.current);\r\n        \r\n        console.log(\"Map initialized successfully\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error initializing map:\", error);\r\n      setMapError(\"Failed to initialize map: \" + error.message);\r\n    }\r\n    \r\n    // Cleanup function\r\n    return () => {\r\n      if (leafletMapRef.current) {\r\n        leafletMapRef.current.remove();\r\n        leafletMapRef.current = null;\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Update locations\r\n  useEffect(() => {\r\n    console.log(\"Location update - My location:\", myLocation);\r\n    console.log(\"Location update - Connected users:\", connectedUsers);\r\n    \r\n    const locations = [];\r\n    \r\n    // Add my location if available\r\n    if (myLocation && myLocation.latitude && myLocation.longitude) {\r\n      console.log(\"Adding my location to map:\", myLocation);\r\n      locations.push({\r\n        id: 'me',\r\n        name: 'My Location',\r\n        role: user?.role || 'unknown',\r\n        lat: myLocation.latitude,\r\n        lng: myLocation.longitude,\r\n        isMe: true\r\n      });\r\n    }\r\n    \r\n    // Add connected users' locations\r\n    Object.values(connectedUsers).forEach(connectedUser => {\r\n      if (connectedUser.coordinates && \r\n          connectedUser.coordinates.latitude && \r\n          connectedUser.coordinates.longitude) {\r\n        console.log(\"Adding connected user to map:\", connectedUser);\r\n        locations.push({\r\n          id: connectedUser.userId,\r\n          name: connectedUser.userName,\r\n          role: connectedUser.role,\r\n          lat: connectedUser.coordinates.latitude,\r\n          lng: connectedUser.coordinates.longitude,\r\n          isMe: false\r\n        });\r\n      }\r\n    });\r\n    \r\n    console.log(\"All locations for map:\", locations);\r\n    setAllLocations(locations);\r\n  }, [myLocation, connectedUsers, user]);\r\n\r\n  // Update markers when locations change\r\n  useEffect(() => {\r\n    if (!leafletMapRef.current) {\r\n      console.log(\"Map not initialized yet, can't add markers\");\r\n      return;\r\n    }\r\n    \r\n    if (allLocations.length === 0) {\r\n      console.log(\"No locations to display on map\");\r\n      return;\r\n    }\r\n    \r\n    console.log(\"Updating map markers with locations:\", allLocations);\r\n    \r\n    try {\r\n      // Clear existing markers\r\n      Object.values(markersRef.current).forEach(marker => {\r\n        leafletMapRef.current.removeLayer(marker);\r\n      });\r\n      markersRef.current = {};\r\n      \r\n      // Add new markers\r\n      allLocations.forEach(location => {\r\n        console.log(\"Adding marker for:\", location);\r\n        const marker = L.marker([location.lat, location.lng])\r\n          .addTo(leafletMapRef.current)\r\n          .bindPopup(`\r\n            <strong>${location.name}</strong><br>\r\n            Role: ${location.role}<br>\r\n            ${!location.isMe ? `Last updated: ${new Date().toLocaleTimeString()}` : ''}\r\n          `);\r\n        \r\n        markersRef.current[location.id] = marker;\r\n      });\r\n      \r\n      // Fit map to show all markers\r\n      if (allLocations.length === 1) {\r\n        leafletMapRef.current.setView([allLocations[0].lat, allLocations[0].lng], 15);\r\n      } else {\r\n        const bounds = L.latLngBounds(allLocations.map(loc => [loc.lat, loc.lng]));\r\n        leafletMapRef.current.fitBounds(bounds, { padding: [50, 50] });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating map markers:\", error);\r\n      setMapError(\"Failed to update map markers: \" + error.message);\r\n    }\r\n  }, [allLocations]);\r\n\r\n  // If there's an error, show it\r\n  if (mapError) {\r\n    return (\r\n      <div className=\"location-map-container error\">\r\n        <p>Error: {mapError}</p>\r\n        <button onClick={() => window.location.reload()}>Reload Page</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // If no locations, show loading\r\n  if (!myLocation && Object.keys(connectedUsers).length === 0) {\r\n    return (\r\n      <div className=\"location-map-container loading\">\r\n        <p>Waiting for location data...</p>\r\n        <div className=\"debug-info\">\r\n          <p><strong>Debug Info:</strong></p>\r\n          <p>My Location: {JSON.stringify(debugInfo.myLocation)}</p>\r\n          <p>Connected Users: {Object.keys(debugInfo.connectedUsers).length}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"location-map-container\">\r\n      <div ref={mapRef} style={{ height: '100%', width: '100%' }}></div>\r\n      {allLocations.length === 0 && (\r\n        <div className=\"map-overlay\">\r\n          <p>No locations to display on map</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocationMap;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}