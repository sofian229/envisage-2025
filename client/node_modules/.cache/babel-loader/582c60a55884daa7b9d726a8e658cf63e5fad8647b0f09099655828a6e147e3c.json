{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\Clubs\\\\CIS\\\\HackPrix\\\\drift-guard-1pm\\\\client\\\\src\\\\contexts\\\\LocationContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport webSocketService from '../utils/websocket';\nimport locationService from '../utils/locationService';\nimport { useAuth } from './AuthContext'; // Assuming you have an AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocationContext = /*#__PURE__*/createContext();\nexport const useLocation = () => {\n  _s();\n  return useContext(LocationContext);\n};\n_s(useLocation, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const LocationProvider = ({\n  children\n}) => {\n  _s2();\n  const {\n    user\n  } = useAuth();\n  const [myLocation, setMyLocation] = useState(null);\n  const [connectedUsers, setConnectedUsers] = useState({});\n  const [isTracking, setIsTracking] = useState(false);\n  const [trackingError, setTrackingError] = useState(null);\n\n  // Initialize location tracking when user is authenticated\n  useEffect(() => {\n    if (user) {\n      // Start tracking my location\n      startLocationTracking();\n\n      // Set up WebSocket listeners for location updates from others\n      webSocketService.addListener('message', handleWebSocketMessage);\n      return () => {\n        stopLocationTracking();\n        webSocketService.removeListener('message', handleWebSocketMessage);\n      };\n    }\n  }, [user]);\n  const startLocationTracking = () => {\n    setTrackingError(null);\n\n    // Set up location service listeners\n    locationService.addListener('update', handleMyLocationUpdate);\n    locationService.addListener('error', handleLocationError);\n\n    // Start tracking\n    const success = locationService.startTracking();\n    setIsTracking(success);\n    if (!success) {\n      setTrackingError('Failed to start location tracking');\n    }\n  };\n  const stopLocationTracking = () => {\n    locationService.removeListener('update', handleMyLocationUpdate);\n    locationService.removeListener('error', handleLocationError);\n    locationService.stopTracking();\n    setIsTracking(false);\n  };\n  const handleMyLocationUpdate = coordinates => {\n    setMyLocation(coordinates);\n  };\n  const handleLocationError = error => {\n    console.error('Location tracking error:', error);\n    setTrackingError(error.message || 'Unknown location tracking error');\n    setIsTracking(false);\n  };\n  const handleWebSocketMessage = data => {\n    if (data.type === 'locationUpdate' && data.userId !== (user === null || user === void 0 ? void 0 : user._id)) {\n      setConnectedUsers(prev => ({\n        ...prev,\n        [data.userId]: {\n          userId: data.userId,\n          userName: data.userName,\n          role: data.role,\n          coordinates: data.coordinates,\n          timestamp: data.timestamp\n        }\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LocationContext.Provider, {\n    value: {\n      myLocation,\n      connectedUsers,\n      isTracking,\n      trackingError,\n      startLocationTracking,\n      stopLocationTracking\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s2(LocationProvider, \"8xQkCeYrcttfWYF/lHBFXH5y7p8=\", false, function () {\n  return [useAuth];\n});\n_c = LocationProvider;\nvar _c;\n$RefreshReg$(_c, \"LocationProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","webSocketService","locationService","useAuth","jsxDEV","_jsxDEV","LocationContext","useLocation","_s","LocationProvider","children","_s2","user","myLocation","setMyLocation","connectedUsers","setConnectedUsers","isTracking","setIsTracking","trackingError","setTrackingError","startLocationTracking","addListener","handleWebSocketMessage","stopLocationTracking","removeListener","handleMyLocationUpdate","handleLocationError","success","startTracking","stopTracking","coordinates","error","console","message","data","type","userId","_id","prev","userName","role","timestamp","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Programming/Clubs/CIS/HackPrix/drift-guard-1pm/client/src/contexts/LocationContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport webSocketService from '../utils/websocket';\nimport locationService from '../utils/locationService';\nimport { useAuth } from './AuthContext'; // Assuming you have an AuthContext\n\nconst LocationContext = createContext();\n\nexport const useLocation = () => useContext(LocationContext);\n\nexport const LocationProvider = ({ children }) => {\n  const { user } = useAuth();\n  const [myLocation, setMyLocation] = useState(null);\n  const [connectedUsers, setConnectedUsers] = useState({});\n  const [isTracking, setIsTracking] = useState(false);\n  const [trackingError, setTrackingError] = useState(null);\n\n  // Initialize location tracking when user is authenticated\n  useEffect(() => {\n    if (user) {\n      // Start tracking my location\n      startLocationTracking();\n\n      // Set up WebSocket listeners for location updates from others\n      webSocketService.addListener('message', handleWebSocketMessage);\n      \n      return () => {\n        stopLocationTracking();\n        webSocketService.removeListener('message', handleWebSocketMessage);\n      };\n    }\n  }, [user]);\n\n  const startLocationTracking = () => {\n    setTrackingError(null);\n    \n    // Set up location service listeners\n    locationService.addListener('update', handleMyLocationUpdate);\n    locationService.addListener('error', handleLocationError);\n    \n    // Start tracking\n    const success = locationService.startTracking();\n    setIsTracking(success);\n    \n    if (!success) {\n      setTrackingError('Failed to start location tracking');\n    }\n  };\n\n  const stopLocationTracking = () => {\n    locationService.removeListener('update', handleMyLocationUpdate);\n    locationService.removeListener('error', handleLocationError);\n    locationService.stopTracking();\n    setIsTracking(false);\n  };\n\n  const handleMyLocationUpdate = (coordinates) => {\n    setMyLocation(coordinates);\n  };\n\n  const handleLocationError = (error) => {\n    console.error('Location tracking error:', error);\n    setTrackingError(error.message || 'Unknown location tracking error');\n    setIsTracking(false);\n  };\n\n  const handleWebSocketMessage = (data) => {\n    if (data.type === 'locationUpdate' && data.userId !== user?._id) {\n      setConnectedUsers(prev => ({\n        ...prev,\n        [data.userId]: {\n          userId: data.userId,\n          userName: data.userName,\n          role: data.role,\n          coordinates: data.coordinates,\n          timestamp: data.timestamp\n        }\n      }));\n    }\n  };\n\n  return (\n    <LocationContext.Provider\n      value={{\n        myLocation,\n        connectedUsers,\n        isTracking,\n        trackingError,\n        startLocationTracking,\n        stopLocationTracking\n      }}\n    >\n      {children}\n    </LocationContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}