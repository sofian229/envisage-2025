{"ast":null,"code":"import webSocketService from './websocket';\nclass LocationService {\n  constructor() {\n    this.watchId = null;\n    this.isTracking = false;\n    this.listeners = {\n      update: [],\n      error: []\n    };\n    this.options = {\n      enableHighAccuracy: true,\n      maximumAge: 0,\n      timeout: 10000\n    };\n  }\n  startTracking() {\n    if (!navigator.geolocation) {\n      this.notifyListeners('error', new Error('Geolocation is not supported by your browser'));\n      return false;\n    }\n    if (this.isTracking) {\n      return true;\n    }\n    try {\n      this.watchId = navigator.geolocation.watchPosition(this.handlePositionUpdate.bind(this), this.handlePositionError.bind(this), this.options);\n      this.isTracking = true;\n      return true;\n    } catch (error) {\n      this.notifyListeners('error', error);\n      return false;\n    }\n  }\n  stopTracking() {\n    if (this.watchId !== null) {\n      navigator.geolocation.clearWatch(this.watchId);\n      this.watchId = null;\n      this.isTracking = false;\n    }\n  }\n  handlePositionUpdate(position) {\n    const coordinates = {\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude,\n      accuracy: position.coords.accuracy,\n      timestamp: position.timestamp\n    };\n\n    // Notify local listeners\n    this.notifyListeners('update', coordinates);\n\n    // Send to server via WebSocket\n    webSocketService.send({\n      type: 'locationUpdate',\n      coordinates\n    });\n  }\n  handlePositionError(error) {\n    let errorMessage;\n    switch (error.code) {\n      case error.PERMISSION_DENIED:\n        errorMessage = 'Location access denied. Please enable location services.';\n        break;\n      case error.POSITION_UNAVAILABLE:\n        errorMessage = 'Location information is unavailable.';\n        break;\n      case error.TIMEOUT:\n        errorMessage = 'Location request timed out.';\n        break;\n      default:\n        errorMessage = 'An unknown error occurred while getting location.';\n    }\n    const errorObj = new Error(errorMessage);\n    errorObj.originalError = error;\n    this.notifyListeners('error', errorObj);\n    this.isTracking = false;\n  }\n  addListener(event, callback) {\n    if (this.listeners[event]) {\n      this.listeners[event].push(callback);\n    }\n  }\n  removeListener(event, callback) {\n    if (this.listeners[event]) {\n      this.listeners[event] = this.listeners[event].filter(cb => cb !== callback);\n    }\n  }\n  notifyListeners(event, data) {\n    if (this.listeners[event]) {\n      this.listeners[event].forEach(callback => {\n        try {\n          callback(data);\n        } catch (error) {\n          console.error(`Error in ${event} listener:`, error);\n        }\n      });\n    }\n  }\n}\n\n// Singleton instance\nconst locationService = new LocationService();\nexport default locationService;","map":{"version":3,"names":["webSocketService","LocationService","constructor","watchId","isTracking","listeners","update","error","options","enableHighAccuracy","maximumAge","timeout","startTracking","navigator","geolocation","notifyListeners","Error","watchPosition","handlePositionUpdate","bind","handlePositionError","stopTracking","clearWatch","position","coordinates","latitude","coords","longitude","accuracy","timestamp","send","type","errorMessage","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","errorObj","originalError","addListener","event","callback","push","removeListener","filter","cb","data","forEach","console","locationService"],"sources":["C:/Programming/Clubs/CIS/HackPrix/drift-guard-1pm/client/src/utils/locationService.js"],"sourcesContent":["import webSocketService from './websocket';\n\nclass LocationService {\n  constructor() {\n    this.watchId = null;\n    this.isTracking = false;\n    this.listeners = {\n      update: [],\n      error: []\n    };\n    this.options = {\n      enableHighAccuracy: true,\n      maximumAge: 0,\n      timeout: 10000\n    };\n  }\n\n  startTracking() {\n    if (!navigator.geolocation) {\n      this.notifyListeners('error', new Error('Geolocation is not supported by your browser'));\n      return false;\n    }\n    \n    if (this.isTracking) {\n      return true;\n    }\n    \n    try {\n      this.watchId = navigator.geolocation.watchPosition(\n        this.handlePositionUpdate.bind(this),\n        this.handlePositionError.bind(this),\n        this.options\n      );\n      \n      this.isTracking = true;\n      return true;\n    } catch (error) {\n      this.notifyListeners('error', error);\n      return false;\n    }\n  }\n\n  stopTracking() {\n    if (this.watchId !== null) {\n      navigator.geolocation.clearWatch(this.watchId);\n      this.watchId = null;\n      this.isTracking = false;\n    }\n  }\n\n  handlePositionUpdate(position) {\n    const coordinates = {\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude,\n      accuracy: position.coords.accuracy,\n      timestamp: position.timestamp\n    };\n    \n    // Notify local listeners\n    this.notifyListeners('update', coordinates);\n    \n    // Send to server via WebSocket\n    webSocketService.send({\n      type: 'locationUpdate',\n      coordinates\n    });\n  }\n\n  handlePositionError(error) {\n    let errorMessage;\n    \n    switch (error.code) {\n      case error.PERMISSION_DENIED:\n        errorMessage = 'Location access denied. Please enable location services.';\n        break;\n      case error.POSITION_UNAVAILABLE:\n        errorMessage = 'Location information is unavailable.';\n        break;\n      case error.TIMEOUT:\n        errorMessage = 'Location request timed out.';\n        break;\n      default:\n        errorMessage = 'An unknown error occurred while getting location.';\n    }\n    \n    const errorObj = new Error(errorMessage);\n    errorObj.originalError = error;\n    \n    this.notifyListeners('error', errorObj);\n    this.isTracking = false;\n  }\n\n  addListener(event, callback) {\n    if (this.listeners[event]) {\n      this.listeners[event].push(callback);\n    }\n  }\n\n  removeListener(event, callback) {\n    if (this.listeners[event]) {\n      this.listeners[event] = this.listeners[event].filter(cb => cb !== callback);\n    }\n  }\n\n  notifyListeners(event, data) {\n    if (this.listeners[event]) {\n      this.listeners[event].forEach(callback => {\n        try {\n          callback(data);\n        } catch (error) {\n          console.error(`Error in ${event} listener:`, error);\n        }\n      });\n    }\n  }\n}\n\n// Singleton instance\nconst locationService = new LocationService();\nexport default locationService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}