{"ast":null,"code":"class WebSocketService {\n  constructor() {\n    this.socket = null;\n    this.listeners = new Map();\n  }\n  connect(token) {\n    if (this.socket) {\n      this.disconnect();\n    }\n    this.socket = new WebSocket(`ws://localhost:5000/ws?token=${token}`);\n    this.socket.onopen = () => {\n      console.log('WebSocket connected');\n      this.notifyListeners('connected', null);\n    };\n    this.socket.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        console.log('WebSocket message received:', data);\n        this.notifyListeners('message', data);\n      } catch (error) {\n        console.error('Error parsing WebSocket message:', error);\n      }\n    };\n    this.socket.onerror = error => {\n      console.error('WebSocket error:', error);\n      this.notifyListeners('error', error);\n    };\n    this.socket.onclose = () => {\n      console.log('WebSocket disconnected');\n      this.notifyListeners('disconnected', null);\n    };\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.close();\n      this.socket = null;\n    }\n  }\n  sendMessage(data) {\n    if (this.socket && this.socket.readyState === WebSocket.OPEN) {\n      this.socket.send(JSON.stringify(data));\n      return true;\n    }\n    return false;\n  }\n  sendLocation(latitude, longitude) {\n    return this.sendMessage({\n      type: 'location',\n      latitude,\n      longitude\n    });\n  }\n  addListener(event, callback) {\n    if (!this.listeners.has(event)) {\n      this.listeners.set(event, []);\n    }\n    this.listeners.get(event).push(callback);\n  }\n  removeListener(event, callback) {\n    if (this.listeners.has(event)) {\n      const callbacks = this.listeners.get(event);\n      const index = callbacks.indexOf(callback);\n      if (index !== -1) {\n        callbacks.splice(index, 1);\n      }\n    }\n  }\n  notifyListeners(event, data) {\n    if (this.listeners.has(event)) {\n      this.listeners.get(event).forEach(callback => callback(data));\n    }\n  }\n}\n// Create a singleton instance\nconst webSocketService = new WebSocketService();\nexport default webSocketService;","map":{"version":3,"names":["WebSocketService","constructor","socket","listeners","Map","connect","token","disconnect","WebSocket","onopen","console","log","notifyListeners","onmessage","event","data","JSON","parse","error","onerror","onclose","close","sendMessage","readyState","OPEN","send","stringify","sendLocation","latitude","longitude","type","addListener","callback","has","set","get","push","removeListener","callbacks","index","indexOf","splice","forEach","webSocketService"],"sources":["C:/Programming/Clubs/CIS/HackPrix/drift-guard-1pm/client/src/utils/websocket.js"],"sourcesContent":["class WebSocketService {\r\n  constructor() {    this.socket = null;\r\n    this.listeners = new Map();  }\r\n  connect(token) {\r\n    if (this.socket) {      this.disconnect();\r\n    }\r\n    this.socket = new WebSocket(`ws://localhost:5000/ws?token=${token}`);\r\n    this.socket.onopen = () => {      console.log('WebSocket connected');\r\n      this.notifyListeners('connected', null);    };\r\n    this.socket.onmessage = (event) => {\r\n      try {        const data = JSON.parse(event.data);\r\n        console.log('WebSocket message received:', data);        this.notifyListeners('message', data);\r\n      } catch (error) {        console.error('Error parsing WebSocket message:', error);\r\n      }    };\r\n    this.socket.onerror = (error) => {\r\n      console.error('WebSocket error:', error);      this.notifyListeners('error', error);\r\n    };\r\n    this.socket.onclose = () => {      console.log('WebSocket disconnected');\r\n      this.notifyListeners('disconnected', null);    };\r\n  }\r\n  disconnect() {    if (this.socket) {\r\n      this.socket.close();      this.socket = null;\r\n    }  }\r\n  sendMessage(data) {\r\n    if (this.socket && this.socket.readyState === WebSocket.OPEN) {      this.socket.send(JSON.stringify(data));\r\n      return true;    }\r\n    return false;  }\r\n  sendLocation(latitude, longitude) {\r\n    return this.sendMessage({      type: 'location',\r\n      latitude,      longitude\r\n    });  }\r\n  addListener(event, callback) {\r\n    if (!this.listeners.has(event)) {      this.listeners.set(event, []);\r\n    }    this.listeners.get(event).push(callback);\r\n  }\r\n  removeListener(event, callback) {    if (this.listeners.has(event)) {\r\n      const callbacks = this.listeners.get(event);      const index = callbacks.indexOf(callback);\r\n      if (index !== -1) {        callbacks.splice(index, 1);\r\n      }    }\r\n  }\r\n  notifyListeners(event, data) {    if (this.listeners.has(event)) {\r\n      this.listeners.get(event).forEach(callback => callback(data));    }\r\n  }}\r\n// Create a singleton instance\r\nconst webSocketService = new WebSocketService();\r\nexport default webSocketService;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}