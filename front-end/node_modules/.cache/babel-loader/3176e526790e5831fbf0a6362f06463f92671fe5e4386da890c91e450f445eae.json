{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\caretaker-dashboard\\\\front-end\\\\src\\\\components\\\\PatientCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport MedicationTracker from './MedicationTracker'; // Import the MedicationTracker\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientCard = ({\n  patientId\n}) => {\n  _s();\n  var _patient$medications;\n  const [patient, setPatient] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchPatient = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Make sure the URL matches your Express route for fetching a single patient\n      const res = await axios.get(`http://localhost:3000/api/patients/${patientId}`);\n      setPatient(res.data);\n    } catch (err) {\n      console.error('Error fetching patient:', err);\n      setError('Failed to load patient data.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (patientId) {\n      fetchPatient();\n    }\n  }, [patientId]); // Re-fetch patient data when patientId changes\n\n  // Handle checkbox toggle\n  const handleMedicationToggle = async (medicationId, currentStatus) => {\n    try {\n      // Make sure the URL matches your Express route for updating medication status\n      const response = await axios.put(`http://localhost:3000/api/patients/${patientId}/medications/${medicationId}`, {\n        taken: !currentStatus // Toggle the status\n      });\n      // Update the patient state with the latest data from the server\n      setPatient(response.data);\n    } catch (error) {\n      console.error('Error updating medication:', error);\n      // Optionally, revert the UI state or show an error message\n    }\n  };\n\n  // Callback to update patient state when a new medication is added from MedicationTracker\n  const handleNewMedicationAdded = newMedication => {\n    setPatient(prevPatient => {\n      if (!prevPatient) return prevPatient;\n      return {\n        ...prevPatient,\n        medications: [...(prevPatient.medications || []), newMedication]\n      };\n    });\n  };\n\n  // Handle medication deletion\n  const handleMedicationDelete = async medicationId => {\n    try {\n      const response = await axios.delete(`http://localhost:3000/api/patients/${patientId}/medications/${medicationId}`);\n      if (response.status === 200) {\n        // Remove the deleted medication from the local state\n        setPatient(prevPatient => ({\n          ...prevPatient,\n          medications: prevPatient.medications.filter(med => med._id !== medicationId)\n        }));\n      }\n    } catch (error) {\n      console.error('Error deleting medication:', error);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading patient data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 21\n  }, this);\n  if (!patient) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No patient data available.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto bg-white shadow-lg rounded-xl p-6 mb-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-2\",\n      children: patient.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-700\",\n      children: [\"Age: \", patient.age]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-700\",\n      children: [\"DOB: \", new Date(patient.dateOfBirth).toLocaleDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), \"---\", /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl mt-4 mb-2 font-medium\",\n      children: \"Medications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), patient.medications && patient.medications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: '#718096'\n      },\n      children: \"No medications recorded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-2\",\n      children: (_patient$medications = patient.medications) === null || _patient$medications === void 0 ? void 0 : _patient$medications.map(med => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: med.taken,\n            onChange: () => handleMedicationToggle(med._id, med.taken),\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `${med.taken ? 'line-through text-gray-500' : 'text-black'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: med.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), \" (\", med.dosage, \") \", med.frequency && `- ${med.frequency}`, med.lastTaken && med.taken && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-gray-400 ml-2\",\n              children: [\"(Taken: \", new Date(med.lastTaken).toLocaleTimeString(), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleMedicationDelete(med._id),\n          className: \"ml-4 text-red-500 hover:text-red-700 text-sm\",\n          title: \"Delete Medication\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this)]\n      }, med._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), \"---\", /*#__PURE__*/_jsxDEV(MedicationTracker, {\n      patientId: patientId,\n      onMedicationAdded: handleNewMedicationAdded,\n      readOnly: false // Allow adding medications\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientCard, \"aZ9cF16jd+vhElcE9KxNKsAmWns=\");\n_c = PatientCard;\nexport default PatientCard;\nvar _c;\n$RefreshReg$(_c, \"PatientCard\");","map":{"version":3,"names":["React","useEffect","useState","axios","MedicationTracker","jsxDEV","_jsxDEV","PatientCard","patientId","_s","_patient$medications","patient","setPatient","loading","setLoading","error","setError","fetchPatient","res","get","data","err","console","handleMedicationToggle","medicationId","currentStatus","response","put","taken","handleNewMedicationAdded","newMedication","prevPatient","medications","handleMedicationDelete","delete","status","filter","med","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","age","Date","dateOfBirth","toLocaleDateString","length","style","color","map","type","checked","onChange","dosage","frequency","lastTaken","toLocaleTimeString","onClick","title","onMedicationAdded","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/caretaker-dashboard/front-end/src/components/PatientCard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport MedicationTracker from './MedicationTracker'; // Import the MedicationTracker\r\n\r\nconst PatientCard = ({ patientId }) => {\r\n  const [patient, setPatient] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchPatient = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      // Make sure the URL matches your Express route for fetching a single patient\r\n      const res = await axios.get(`http://localhost:3000/api/patients/${patientId}`);\r\n      setPatient(res.data);\r\n    } catch (err) {\r\n      console.error('Error fetching patient:', err);\r\n      setError('Failed to load patient data.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (patientId) {\r\n      fetchPatient();\r\n    }\r\n  }, [patientId]); // Re-fetch patient data when patientId changes\r\n\r\n  // Handle checkbox toggle\r\n  const handleMedicationToggle = async (medicationId, currentStatus) => {\r\n    try {\r\n      // Make sure the URL matches your Express route for updating medication status\r\n      const response = await axios.put(\r\n        `http://localhost:3000/api/patients/${patientId}/medications/${medicationId}`,\r\n        {\r\n          taken: !currentStatus, // Toggle the status\r\n        }\r\n      );\r\n      // Update the patient state with the latest data from the server\r\n      setPatient(response.data);\r\n    } catch (error) {\r\n      console.error('Error updating medication:', error);\r\n      // Optionally, revert the UI state or show an error message\r\n    }\r\n  };\r\n\r\n  // Callback to update patient state when a new medication is added from MedicationTracker\r\n  const handleNewMedicationAdded = (newMedication) => {\r\n    setPatient((prevPatient) => {\r\n      if (!prevPatient) return prevPatient;\r\n      return {\r\n        ...prevPatient,\r\n        medications: [...(prevPatient.medications || []), newMedication],\r\n      };\r\n    });\r\n  };\r\n\r\n  // Handle medication deletion\r\n  const handleMedicationDelete = async (medicationId) => {\r\n    try {\r\n      const response = await axios.delete(\r\n        `http://localhost:3000/api/patients/${patientId}/medications/${medicationId}`\r\n      );\r\n      if (response.status === 200) {\r\n        // Remove the deleted medication from the local state\r\n        setPatient(prevPatient => ({\r\n          ...prevPatient,\r\n          medications: prevPatient.medications.filter(med => med._id !== medicationId)\r\n        }));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting medication:', error);\r\n    }\r\n  };\r\n\r\n\r\n  if (loading) return <div>Loading patient data...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n  if (!patient) return <div>No patient data available.</div>;\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto bg-white shadow-lg rounded-xl p-6 mb-6\">\r\n      <h2 className=\"text-2xl font-semibold mb-2\">{patient.name}</h2>\r\n      <p className=\"text-gray-700\">Age: {patient.age}</p>\r\n      <p className=\"text-gray-700\">\r\n        DOB: {new Date(patient.dateOfBirth).toLocaleDateString()}\r\n      </p>\r\n\r\n      ---\r\n\r\n      <h3 className=\"text-xl mt-4 mb-2 font-medium\">Medications</h3>\r\n      {patient.medications && patient.medications.length === 0 ? (\r\n        <p style={{ color: '#718096' }}>No medications recorded</p>\r\n      ) : (\r\n        <ul className=\"space-y-2\">\r\n          {patient.medications?.map((med) => (\r\n            <li key={med._id} className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={med.taken}\r\n                  onChange={() => handleMedicationToggle(med._id, med.taken)}\r\n                  className=\"mr-2\"\r\n                />\r\n                <span\r\n                  className={`${\r\n                    med.taken ? 'line-through text-gray-500' : 'text-black'\r\n                  }`}\r\n                >\r\n                  <b>{med.name}</b> ({med.dosage}) {med.frequency && `- ${med.frequency}`}\r\n                  {med.lastTaken && med.taken && (\r\n                    <span className=\"text-sm text-gray-400 ml-2\">\r\n                      (Taken: {new Date(med.lastTaken).toLocaleTimeString()})\r\n                    </span>\r\n                  )}\r\n                </span>\r\n              </div>\r\n              <button\r\n                onClick={() => handleMedicationDelete(med._id)}\r\n                className=\"ml-4 text-red-500 hover:text-red-700 text-sm\"\r\n                title=\"Delete Medication\"\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      ---\r\n\r\n      {/* Render the MedicationTracker for adding new medications */}\r\n      <MedicationTracker\r\n        patientId={patientId}\r\n        onMedicationAdded={handleNewMedicationAdded}\r\n        readOnly={false} // Allow adding medications\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}