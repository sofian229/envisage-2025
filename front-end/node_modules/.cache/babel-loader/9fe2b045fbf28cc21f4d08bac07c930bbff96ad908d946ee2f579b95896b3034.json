{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\caretaker-dashboard\\\\front-end\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n//import Dashboard from './components/Dashboard';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchPatients();\n  }, []);\n  const fetchPatients = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/patients');\n      if (!response.ok) {\n        throw new Error('Failed to fetch patients');\n      }\n      const data = await response.json();\n\n      // Convert MongoDB _id to id for frontend compatibility\n      const patientsWithId = data.map(patient => ({\n        ...patient,\n        id: patient._id\n      }));\n      setPatients(patientsWithId);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching patients:', error);\n      // Fallback to mock data if API is not available\n      const mockPatients = [{\n        id: 1,\n        name: \"John Smith\",\n        age: 78,\n        condition: \"Mild Dementia\",\n        lastCheckup: \"2024-06-05\",\n        emergencyContact: \"Mary Smith - 555-0123\",\n        medications: [{\n          name: \"Donepezil\",\n          dosage: \"10mg\",\n          times: {\n            morning: true,\n            lunch: false,\n            dinner: false,\n            emptyStomach: false\n          },\n          completedTimes: {\n            morning: true,\n            lunch: false,\n            dinner: false,\n            emptyStomach: false\n          },\n          dateAdded: \"2024-06-07\"\n        }, {\n          name: \"Memantine\",\n          dosage: \"20mg\",\n          times: {\n            morning: true,\n            lunch: false,\n            dinner: true,\n            emptyStomach: false\n          },\n          completedTimes: {\n            morning: false,\n            lunch: false,\n            dinner: false,\n            emptyStomach: false\n          },\n          dateAdded: \"2024-06-07\"\n        }],\n        activities: [{\n          type: \"Exercise\",\n          duration: \"30 min\",\n          completed: true,\n          date: \"2024-06-07\"\n        }, {\n          type: \"Memory Games\",\n          duration: \"15 min\",\n          completed: false,\n          date: \"2024-06-07\"\n        }]\n      }];\n      setPatients(mockPatients);\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dementia Caretaker Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Comprehensive care management system\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading patients...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Dashboard, {\n      patients: patients,\n      setPatients: setPatients\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qclHl1f8cyYZrVfTJle+o7Ds0ak=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Dashboard","jsxDEV","_jsxDEV","App","_s","patients","setPatients","loading","setLoading","fetchPatients","response","fetch","ok","Error","data","json","patientsWithId","map","patient","id","_id","error","console","mockPatients","name","age","condition","lastCheckup","emergencyContact","medications","dosage","times","morning","lunch","dinner","emptyStomach","completedTimes","dateAdded","activities","type","duration","completed","date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/caretaker-dashboard/front-end/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n//import Dashboard from './components/Dashboard';\r\nimport './App.css';\r\nimport Dashboard from './components/Dashboard';\r\n\r\n\r\nfunction App() {\r\n  const [patients, setPatients] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchPatients();\r\n  }, []);\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/api/patients');\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch patients');\r\n      }\r\n      const data = await response.json();\r\n\r\n      // Convert MongoDB _id to id for frontend compatibility\r\n      const patientsWithId = data.map(patient => ({\r\n        ...patient,\r\n        id: patient._id\r\n      }));\r\n\r\n      setPatients(patientsWithId);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching patients:', error);\r\n      // Fallback to mock data if API is not available\r\n      const mockPatients = [\r\n        {\r\n          id: 1,\r\n          name: \"John Smith\",\r\n          age: 78,\r\n          condition: \"Mild Dementia\",\r\n          lastCheckup: \"2024-06-05\",\r\n          emergencyContact: \"Mary Smith - 555-0123\",\r\n          medications: [\r\n            {\r\n              name: \"Donepezil\",\r\n              dosage: \"10mg\",\r\n              times: { morning: true, lunch: false, dinner: false, emptyStomach: false },\r\n              completedTimes: { morning: true, lunch: false, dinner: false, emptyStomach: false },\r\n              dateAdded: \"2024-06-07\"\r\n            },\r\n            {\r\n              name: \"Memantine\",\r\n              dosage: \"20mg\",\r\n              times: { morning: true, lunch: false, dinner: true, emptyStomach: false },\r\n              completedTimes: { morning: false, lunch: false, dinner: false, emptyStomach: false },\r\n              dateAdded: \"2024-06-07\"\r\n            }\r\n          ],\r\n          activities: [\r\n            { type: \"Exercise\", duration: \"30 min\", completed: true, date: \"2024-06-07\" },\r\n            { type: \"Memory Games\", duration: \"15 min\", completed: false, date: \"2024-06-07\" }\r\n          ]\r\n        }\r\n      ];\r\n      setPatients(mockPatients);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"app-header\">\r\n        <h1>Dementia Caretaker Dashboard</h1>\r\n        <p>Comprehensive care management system</p>\r\n      </header>\r\n      \r\n      {loading ? (\r\n        <div className=\"loading\">Loading patients...</div>\r\n      ) : (\r\n        <Dashboard patients={patients} setPatients={setPatients} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AACA,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdU,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;MAClE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;;MAElC;MACA,MAAMC,cAAc,GAAGF,IAAI,CAACG,GAAG,CAACC,OAAO,KAAK;QAC1C,GAAGA,OAAO;QACVC,EAAE,EAAED,OAAO,CAACE;MACd,CAAC,CAAC,CAAC;MAEHd,WAAW,CAACU,cAAc,CAAC;MAC3BR,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD;MACA,MAAME,YAAY,GAAG,CACnB;QACEJ,EAAE,EAAE,CAAC;QACLK,IAAI,EAAE,YAAY;QAClBC,GAAG,EAAE,EAAE;QACPC,SAAS,EAAE,eAAe;QAC1BC,WAAW,EAAE,YAAY;QACzBC,gBAAgB,EAAE,uBAAuB;QACzCC,WAAW,EAAE,CACX;UACEL,IAAI,EAAE,WAAW;UACjBM,MAAM,EAAE,MAAM;UACdC,KAAK,EAAE;YAAEC,OAAO,EAAE,IAAI;YAAEC,KAAK,EAAE,KAAK;YAAEC,MAAM,EAAE,KAAK;YAAEC,YAAY,EAAE;UAAM,CAAC;UAC1EC,cAAc,EAAE;YAAEJ,OAAO,EAAE,IAAI;YAAEC,KAAK,EAAE,KAAK;YAAEC,MAAM,EAAE,KAAK;YAAEC,YAAY,EAAE;UAAM,CAAC;UACnFE,SAAS,EAAE;QACb,CAAC,EACD;UACEb,IAAI,EAAE,WAAW;UACjBM,MAAM,EAAE,MAAM;UACdC,KAAK,EAAE;YAAEC,OAAO,EAAE,IAAI;YAAEC,KAAK,EAAE,KAAK;YAAEC,MAAM,EAAE,IAAI;YAAEC,YAAY,EAAE;UAAM,CAAC;UACzEC,cAAc,EAAE;YAAEJ,OAAO,EAAE,KAAK;YAAEC,KAAK,EAAE,KAAK;YAAEC,MAAM,EAAE,KAAK;YAAEC,YAAY,EAAE;UAAM,CAAC;UACpFE,SAAS,EAAE;QACb,CAAC,CACF;QACDC,UAAU,EAAE,CACV;UAAEC,IAAI,EAAE,UAAU;UAAEC,QAAQ,EAAE,QAAQ;UAAEC,SAAS,EAAE,IAAI;UAAEC,IAAI,EAAE;QAAa,CAAC,EAC7E;UAAEH,IAAI,EAAE,cAAc;UAAEC,QAAQ,EAAE,QAAQ;UAAEC,SAAS,EAAE,KAAK;UAAEC,IAAI,EAAE;QAAa,CAAC;MAEtF,CAAC,CACF;MACDpC,WAAW,CAACiB,YAAY,CAAC;MACzBf,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKyC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB1C,OAAA;MAAQyC,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5B1C,OAAA;QAAA0C,QAAA,EAAI;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrC9C,OAAA;QAAA0C,QAAA,EAAG;MAAoC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,EAERzC,OAAO,gBACNL,OAAA;MAAKyC,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAElD9C,OAAA,CAACF,SAAS;MAACK,QAAQ,EAAEA,QAAS;MAACC,WAAW,EAAEA;IAAY;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC3D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC5C,EAAA,CA5EQD,GAAG;AAAA8C,EAAA,GAAH9C,GAAG;AA8EZ,eAAeA,GAAG;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}